---
import type { ElementoLista } from '@/tipos';
import { convertirEscala } from '@enflujo/alquimia';

interface Props {
  tiempo: ElementoLista[];
  decadas: ElementoLista[];
}

const { decadas, tiempo } = Astro.props;

let datosLinea = '';
const numeroDecadas = decadas.length;

const anchoDecada = 100 / numeroDecadas;
const altoDecada = (valor: number) => convertirEscala(valor, 0, 58, 0, 30);
const posY = (valor: number) => convertirEscala(valor, 0, 20, 100, 0);
const posX = (valor: number) => convertirEscala(valor, 1966, 2026, 0, 100);

tiempo.forEach((marca, i) => {
  const x = posX(+marca.nombre);
  const y = posY(marca.conteo);

  if (i === 0) {
    datosLinea += `M ${0}, ${100} L`;
  } else {
  }

  datosLinea += ` ${x}, ${y}`;

  if (i === tiempo.length - 1) {
    datosLinea += 'L 100, 100 Z';
  }
});

function rango(min: number, max: number) {
  var len = max - min + 1;
  var arr = new Array(len);
  for (var i = 0; i < len; i++) {
    arr[i] = min + i;
  }
  return arr;
}

const listaAños = rango(+tiempo[0].nombre, +tiempo[tiempo.length - 1].nombre);
---

<div id="contenedorLineaTiempo">
  <div id="contenedorGrafica">
    <svg width="100%" height="100%" viewBox="0 0 100 100" preserveAspectRatio="none">
      <g id="grupoDecadas" style={`transform:translateX(8%)`}>
        {
          decadas.map((decada, i) => (
            <rect
              x={`${i * anchoDecada}%`}
              y="0"
              width={`${anchoDecada}%`}
              height={`15px`}
              stroke="#62e595"
              stroke-width="1px"
            />
          ))
        }

        <!-- <path d={datosLinea}></path> -->
      </g>
    </svg>

    <svg id="marcas" width="100%" height="100%">
      {
        listaAños.map((marca) => (
          <>
            <circle
              style={`transform:translate(${posX(marca)}%, ${45}%)`}
              r="4"
              cx="10"
              cy="0"
              stroke="#62e595"
              stroke-width="2px"
              fill="transparent"
            />
          </>
        ))
      }

      {
        tiempo.map((marca) => (
          <>
            <circle
              style={`transform:translate(${posX(+marca.nombre)}%, ${45}%)`}
              r="4"
              cx="10"
              cy="0"
              stroke="#62e595"
              stroke-width="2px"
              fill="#62e595"
            />
          </>
        ))
      }

      {
        listaAños.map((marca) => (
          <text style={`transform:translate(${posX(+marca)}%, 75%)`} x="0" y="0">
            {marca}
          </text>
        ))
      }
    </svg>
  </div>
</div>

<style lang="scss">
  #contenedorLineaTiempo {
    position: absolute;
    bottom: 0;
    width: 100vw;
    margin: 0 auto;
  }

  #contenedorGrafica {
    height: 80px;
    position: relative;

    background-color: var(--fondoVerdeOscuro);
    z-index: 3;
    #decadas {
      fill: rgba(26, 42, 34, 0.3);
    }
  }

  svg {
    position: absolute;
    bottom: 0;
    left: 0;

    path {
      fill: var(--fondoVerdeOscuro);
    }

    text {
      font-size: 8.5px;
      fill: rgba(255, 255, 222, 1);
      text-shadow: 1px 1px 1px rgba(26, 42, 34, 1);
    }
  }
</style>
