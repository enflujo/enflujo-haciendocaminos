---
import type { ElementoLista, Listas } from '@/tipos';

interface Props {
  id: keyof Listas;
  titulo: string;
  lista: ElementoLista[];
}

const { lista, titulo, id } = Astro.props;
---

<section id={id} class="lista">
  <h2 class="titulo" id="titulo">{titulo}</h2>
  <ul class=`contenedorElementos ${id}`>
    {
      lista.map((elemento, i) => (
        <li
          id={`${id}_${i}`}
          class="nodo"
          data-con={`${elemento.relaciones.map((rel) => `${rel.tipo}_${rel.indice}`)}`}
        >
          <h3 class="nombre">{elemento.nombre}</h3>
          <div class="barra">
            <span class="linea" style={`width: ${elemento.conteo}%`} />
            <span class="conteo">{elemento.conteo}</span>
          </div>
        </li>
      ))
    }
  </ul>
</section>

<script>
  const listas = document.querySelectorAll<HTMLElement>('.lista');

  // Función para abrir y cerrar listas. Falta decidir si se usa en teléfonos
  listas.forEach((lista) => {
    const titulo = lista.querySelector('.titulo');
    const contenedorElementos = lista.querySelector('.contenedorElementos');

    titulo?.addEventListener('click', () => {
      contenedorElementos?.classList.toggle('cerrado');
    });
  });
</script>

<style lang="scss">
  .contenedorElementos {
    display: contents;
    max-height: 20vh;
    overflow-y: visible;

    &.cerrado {
      //  display: none;
    }
  }

  li {
    cursor: pointer;

    &:hover {
      background-color: white;
    }
  }

  .titulo {
    cursor: pointer;
  }

  .nombre {
    margin: 0;
    font-size: 0.85em;
  }

  .barra {
    display: flex;
    align-items: center;

    .linea {
      height: 2px;
      background-color: aqua;
    }

    .conteo {
      margin-left: 3px;
    }
  }
</style>
