---

---

<div id="contenedorMapa"></div>

<script>
  import mapbox from 'mapbox-gl';
  import 'mapbox-gl/dist/mapbox-gl.css';

  const urlBase = import.meta.env.BASE_URL;
  const contenedorMapa = document.getElementById('contenedorMapa') as HTMLDivElement;
  const estilo = 'mapbox://styles/enflujo/clpcruhsj005z01qr10czhk1d';
  mapbox.accessToken = 'pk.eyJ1IjoiZW5mbHVqbyIsImEiOiJjbDNrOXNndXQwMnZsM2lvNDd4N2x0M3dvIn0.eWs4BHs67PcETEUI00T66Q';

  function pintarMapa() {
    if (!contenedorMapa) return;

    const mapa = new mapbox.Map({
      container: contenedorMapa,
      style: estilo,
      zoom: 2,
      attributionControl: false
    });

    /**
     * Cargar icono de im√°genes al mapa
     */
    /*   const icono = new Image(15, 15);
    // Agregar icono a la instancia del mapa (se necesita para usarlo m√°s adelante en las capas).
    icono.onload = () => mapa.addImage('icono', icono);
    icono.src = iconoImagen; */

    /**
     * Esperar a que el mapa de mapbox termine de cargar antes de llenarlo con los datos.
     */
    mapa.on('load', () => {
      // Crea la fuente para todas las ubicaciones (puntos).
      mapa.addSource('ubicaciones', {
        type: 'geojson',
        data: `${urlBase}/datosMapa.geo.json`,
        cluster: true,
        clusterRadius: 100,
        clusterProperties: {
          // Esto suma la cantidad de obras que tiene un grupo,
          // para poder actualizar los c√≠rculos a medida que se hace zoom
          conteo: ['+', ['get', 'conteo']]
        }
      });

      /**
       * üîµ Los c√≠rculos que agrupan varios lugares dependiendo del zoom.
       */
      mapa.addLayer({
        id: 'grupos',
        type: 'circle',
        source: 'ubicaciones',
        filter: ['has', 'point_count'],
        paint: {
          'circle-color': ['interpolate', ['linear'], ['get', 'conteo'], 0, '#FFE485', 20, '#D14836'],
          /**
           * ['step'] | A diferencia de "interpolate", "step" crea una serie de puntos donde algo debe cambiar.
           * ['get', 'obras'] | La cantidad de obras dentro del c√≠rculo, sale de "clusterProperties" que definimos al crear la capa.
           * En "step" se pueden crear los cortes que uno quiera, los valores que siguen deben ser impares:
           * anchoMin, corte1, ancho1, corte2, ancho2, ....
           */
          'circle-radius': ['step', ['get', 'conteo'], 15, 0, 30, 20, 50],
          'circle-opacity': ['case', ['boolean', ['feature-state', 'activo'], false], 1, 0.8]
        }
      });

      /**
       * üÖ∞ Texto dentro del c√≠rculo
       */
      mapa.addLayer({
        id: 'contadorObras',
        type: 'symbol',
        source: 'ubicaciones',
        // S√≥lo mostrarlo cuando tiene m√°s de un lugar agrupado ("point_count" lo crea mapbox y se va actualizando con el zoom).
        filter: ['has', 'point_count'],
        layout: {
          /**
           * 'format' | Permite concatenar una serie de textos o im√°genes.
           * ['image', 'icono'] | Pone la imagen que registramos antes en la instancia de mapbox.
           */
          'text-field': ['format', ['get', 'conteo']],
          // 'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
          'text-size': 12
        }
      });

      /**
       * ‚≠ï Punto cuando es 1 lugar y no un "cluster".
       */
      mapa.addLayer({
        id: 'punto',
        type: 'circle',
        source: 'ubicaciones',
        filter: ['!', ['has', 'point_count']], // Cuando NO tiene "point_count" ya no es un grupo y es s√≥lo 1 punto.
        paint: {
          'circle-color': 'pink',
          'circle-radius': 15,
          'circle-opacity': 0.7
        }
      });

      /**
       * üèõ Nombre del lugar
       */
      mapa.addLayer({
        id: 'nombre',
        type: 'symbol',
        source: 'ubicaciones',
        filter: ['!', ['has', 'point_count']],
        layout: {
          'text-field': [
            'format',
            ['get', 'nombre'],
            { 'font-scale': 0.8 },
            // { 'font-scale': 0.75 },
            ' ',
            ['get', 'conteo'],
            { 'font-scale': 0.75 }
          ]
        },
        paint: {
          'text-color': '#000',
          // 'text-halo-color': '#716b6b',
          'text-halo-width': ['case', ['boolean', ['feature-state', 'activo'], false], 3, 2],
          'text-halo-blur': 0
        }
      });
    });
  }

  pintarMapa();
</script>

<style>
  #contenedorMapa {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
  }
</style>
