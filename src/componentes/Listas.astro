---
import ListaNodos from '@/componentes/ListaNodos.astro';
import listas from '../../estaticos/listas.json';
---

<div id="contenedorListas" class="todoVisible">
  <ListaNodos id="paises" titulo="Países" lista={listas.paises} />
  <ListaNodos id="categorias" titulo="Categorías" lista={listas.categorias} />
  <ListaNodos id="lideres" titulo="Líderes de Proyectos" lista={listas.lideres} />
  <ListaNodos id="roles" titulo="Roles" lista={listas.roles} />
  <ListaNodos id="participantes" titulo="Participantes" lista={listas.participantes} />
  <ListaNodos id="ramas" titulo="Ramas" lista={listas.ramas} />
  <ListaNodos id="temas" titulo="Temas" lista={listas.temas} />
  <ListaNodos id="objetos" titulo="Objetos" lista={listas.objetos} />
  <ListaNodos id="municipios" titulo="Municipios" lista={listas.municipios} />
  <ListaNodos id="decadas" titulo="Décadas" lista={listas.decadas} />
</div>

<script>
  const nodos = document.querySelectorAll<HTMLLIElement>('.nodo');
  import type { ELementoProyecto, Listas, Proyecto, RelacionesFicha } from '@/tipos';
  import { datosFicha, datosListas, datosProyectos, filtrarMapa } from '@/utilidades/cerebro';
  import { ordenarListaObjetos } from '@/utilidades/ayudas';

  datosListas.subscribe((datos) => {
    if (!Object.keys(datos).length) return;

    nodos.forEach((nodo) => {
      const nodosConectados: HTMLLIElement[] = [];
      const proyectosConectados: HTMLLIElement[] = [];
      const proyectos = nodo.dataset.proyectos?.split(',');
      const contenedor = nodo.parentElement;
      const { indice, tipo } = nodo.dataset;

      if (proyectos) {
        proyectos.forEach((idProyecto) => {
          const proyecto = document.getElementById(`proyecto_${idProyecto}`) as HTMLLIElement;

          if (proyecto) {
            proyectosConectados.push(proyecto);
          }
        });
      }

      nodo.onmouseenter = () => {
        nodosConectados.forEach((nodo) => {
          nodo.classList.add('visible', 'explotado');
        });

        proyectosConectados.forEach((nodo) => {
          nodo.classList.add('resaltado');
        });

        contenedor?.classList.add('mantener');
        nodo.classList.add('visible');
      };

      nodo.onmouseleave = () => {
        nodosConectados.forEach((nodo) => {
          nodo.classList.remove('visible', 'explotado');
        });

        proyectosConectados.forEach((nodo) => {
          nodo.classList.remove('resaltado');
        });

        contenedor?.classList.remove('mantener');
        nodo.classList.remove('visible');
      };

      nodo.onclick = () => {
        if (!indice || !tipo) return;
        const datosNodo = datos[tipo as keyof Listas][+indice];
        const listaProyectos = datosProyectos.value as Proyecto[];
        const proyectos = datosNodo.proyectos?.reduce((lista: ELementoProyecto[], indiceProyecto) => {
          const proyecto = listaProyectos.find((p) => p.id === indiceProyecto);
          if (proyecto) {
            lista.push({ nombre: proyecto.nombre.nombre, id: proyecto.id });
          }

          ordenarListaObjetos(lista, 'nombre', true);
          return lista;
        }, []);

        const relaciones: RelacionesFicha = datosNodo.relaciones.reduce((lista, valorActual) => {
          if (!lista[valorActual.tipo]) {
            lista[valorActual.tipo] = [];
          }

          lista[valorActual.tipo].push({
            slug: valorActual.slug,
            conteo: valorActual.conteo,
            nombre: datos[valorActual.tipo][valorActual.indice].nombre
          });

          ordenarListaObjetos(lista[valorActual.tipo], 'slug', true);

          return lista;
        }, {});

        const lugaresMapa = datosNodo.relaciones.filter((relacion) => relacion.tipo === 'municipios');

        filtrarMapa(lugaresMapa.map((lugar) => lugar.slug));

        const listaElegida = nodo.parentElement;
        const titulo = nodo.querySelector<HTMLTitleElement>('.nombre');
        const conteo = nodo.querySelector<HTMLSpanElement>('.conteo');

        datosFicha.set({
          visible: true,
          lista: listaElegida ? listaElegida.dataset.lista : '',
          titulo: titulo?.innerText,
          conteo: conteo ? conteo.innerText : '',
          paises: relaciones.paises ? relaciones.paises : [],
          categorias: relaciones.categorias ? relaciones.categorias : [],
          lideres: relaciones.lideres ? relaciones.lideres : [],
          roles: relaciones.roles ? relaciones.roles : [],
          participantes: relaciones.participantes ? relaciones.participantes : [],
          ramas: relaciones.ramas ? relaciones.ramas : [],
          temas: relaciones.temas ? relaciones.temas : [],
          objetos: relaciones.objetos ? relaciones.objetos : [],
          municipios: relaciones.municipios ? relaciones.municipios : [],
          decadas: relaciones.decadas ? relaciones.decadas : [],
          proyecto: proyectos
        });
      };
    });
  });
</script>
