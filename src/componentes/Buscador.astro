---
import type { Listas } from '@/tipos';
import { nombresListasEgresados, nombresListasProyectos } from '@/utilidades/cerebro';
const listas = { ...nombresListasProyectos, ...nombresListasEgresados };
---

<div id='contenedorBuscador'>
  <img id='botonBuscador' src={`${import.meta.env.BASE_URL}imgs/lupa.svg`} alt='Buscador' />
  <input id='buscador' type='search' placeholder='Buscar' />

  <div id='sugerencias'>
    {
      Object.keys(listas).map((tipo) => (
        <div id={`caja-${tipo}`} class='cajaBuscador'>
          <h4>{listas[tipo as keyof Listas]}</h4>
          <ul class='subLista' />
        </div>
      ))
    }

    <span id='sinResultados'>No hay resultados para la busqueda: <span class='sinResultadoPara'></span></span>
  </div>
</div>

<script>
  import fuzzysort from 'fuzzysort';
  import { opcionesBuscador } from '@/utilidades/cerebro';
  import type { ElementoBuscador } from '@/tipos';
  const buscador = document.getElementById('buscador') as HTMLInputElement;
  const botonBuscador = document.getElementById('botonBuscador') as HTMLDivElement;
  const sugerencias = document.getElementById('sugerencias') as HTMLDataListElement;
  const cajas = sugerencias.querySelectorAll<HTMLDivElement>('.cajaBuscador');
  const sinResultados = document.getElementById('sinResultados') as HTMLSpanElement;
  const sinResultadosPara = sinResultados.querySelector('.sinResultadoPara') as HTMLSpanElement;

  interface ListasBuscador {
    tipo: string;
    puntaje: number;
    elementos: HTMLSpanElement[];
  }

  botonBuscador.onclick = () => {
    sugerencias.classList.toggle('visible');

    if (sugerencias.classList.contains('visible')) {
      buscador.classList.add('visibleCelular');
    } else {
      buscador.classList.remove('visibleCelular');
    }
  };

  opcionesBuscador.subscribe((opciones) => {
    if (!opciones) return;

    buscador.oninput = buscar;

    buscador.addEventListener('focusin', () => {
      const texto = buscador.value.trim();
      if (texto && texto.length) sugerencias.classList.add('visible');
    });

    function buscar() {
      const texto = buscador.value.trim();

      sinResultadosPara.innerText = '';
      cajas.forEach((caja) => caja.classList.remove('visible'));

      if (!texto || !texto.length) {
        sugerencias.classList.remove('visible');
        buscador.classList.remove('visibleCelular');
        return;
      }

      const busqueda = fuzzysort.go<ElementoBuscador>(texto, opciones as ElementoBuscador[], {
        key: 'nombre',
        threshold: -1000,
        limit: 100
      });

      if (busqueda.total > 0) {
        sugerencias.classList.add('visible');
        sinResultados.classList.remove('visible');

        const resultadoEnListas = busqueda.reduce((listas: ListasBuscador[], actual) => {
          const llave = actual.obj.tipo;
          const enLista = listas.find((lista: ListasBuscador) => lista.tipo === llave);

          if (!enLista) {
            listas.push({ puntaje: actual.score, tipo: llave, elementos: [actual.obj.opcion] });
          } else {
            if (enLista.puntaje < actual.score) enLista.puntaje = actual.score;
            enLista.elementos.push(actual.obj.opcion);
          }

          return listas;
        }, []);

        resultadoEnListas.forEach((obj) => {
          const contenedor = document.getElementById(`caja-${obj.tipo}`) as HTMLDivElement;
          const ul = contenedor.querySelector<HTMLUListElement>('.subLista') as HTMLUListElement;
          sugerencias.insertBefore(contenedor, sugerencias.lastChild);
          ul.innerHTML = '';
          contenedor.classList.add('visible');

          obj.elementos.forEach((elemento) => ul.appendChild(elemento));
        });
      } else {
        sinResultados.classList.add('visible');
        sinResultadosPara.innerText = texto;
      }
    }
  });
</script>

<style lang='scss'>
  @import '@/scss/constantes';
  #contenedorBuscador {
    z-index: 99;
  }

  #buscador {
    outline: none;
    border: none;
    padding: 0.8em;
    background-color: rgba(206, 206, 206, 0.444);
    color: var(--textoClaro);
    font-size: 0.85em;
    transition: all 0.25s ease-in-out;
    width: 30vw;
    z-index: 4;
    position: absolute;
    top: calc(var(--altoMenu) + 0.5em);
    left: 100vw;

    &:focus {
      background-color: var(--resaltadoVerde);
      color: black;

      &::placeholder {
        color: rgba(72, 72, 72, 0.452);
      }
    }

    &::placeholder {
      color: rgba(255, 255, 255, 0.452);
    }

    &.visibleCelular {
      top: 55px;
      color: black;
      left: 10px;
      width: 95%;
    }
  }

  #sinResultados {
    font-size: 1.6em;
    text-align: center;
    color: black;
    display: none;
    width: 100%;

    &.visible {
      display: block;
    }

    .sinResultadoPara {
      font-weight: bold;
    }
  }

  #botonBuscador {
    display: inline-block;
    height: 20px;
    cursor: pointer;
    -webkit-filter: invert(1);
    filter: invert(1);
  }

  #sugerencias {
    background-color: var(--grisClaro2);
    position: absolute;
    left: 50%;
    transform: translateX(200%);
    top: var(--altoMenu);
    padding: 3em 1.5em 1.5em 1.5em;
    width: 100vw;
    display: flex;
    flex-wrap: wrap;
    overflow: auto;
    height: calc(100vh - 50px);
    text-transform: none;
    z-index: 1;
    transition: transform 0.2s ease-out;

    &.visible {
      transform: translateX(-50%);
    }

    .cajaBuscador {
      width: 33%;
      border: 1px solid var(--fondoVerdeOscuro);
      display: none;
      flex-direction: column;

      h4 {
        margin: 0;
        background-color: var(--fondoVerdeOscuro);
        padding: 0.6em 1em;
        font-size: 1.1em;
      }

      .subLista {
        padding: 0.6em 1em;
      }

      &.visible {
        display: flex;
      }
    }
  }

  // Cambiar estilos según tamaño de pantalla
  @media screen and (min-width: $corte1) {
    #buscador {
      width: 150px;
      display: block;
      position: relative;
      left: 0;
      top: 0;

      &.visibleCelular {
        top: 0;
      }
    }

    #botonBuscador {
      display: none;
    }
    #sugerencias {
      left: 50%;
      padding: 1.8em 1.5em 1.5em 2em;
      width: 80vw;
    }
  }
</style>

<style lang='scss' is:global>
  // Estos son los <li> dentro de las cajas
  .resultadoBusqueda {
    color: var(--textoOscuro);
    cursor: pointer;
    font-size: 1.2em;
    padding: 0.2em 0.4em;

    &:hover {
      background-color: var(--magenta);
      color: var(--textoClaro);
    }
  }
</style>
