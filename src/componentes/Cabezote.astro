---
import Buscador from './Buscador.astro';

const urlBase = import.meta.env.BASE_URL;
const { pathname } = Astro.url;
const paginaActual = pathname.replace(urlBase, '').replaceAll('/', '');
---

<nav id="menu">
  <div id="menuListas">
    <span class="lineaMenu"></span>
    <span class="lineaMenu"></span>
    <span class="lineaMenu"></span>
  </div>

  <div id="encabezado">
    <h1>Haciendo Caminos</h1>
    <span class="cajaGusanos"></span>
    <ul>
      <li class="botonVista"><a href=`${urlBase}/` class={paginaActual === '' ? 'actual' : ''}>Proyectos</a></li>
      <li class="botonVista">
        <a href=`${urlBase}/egresados` class={paginaActual === 'egresados' ? 'actual' : ''}>Egresados</a>
      </li>
    </ul>

    <Buscador />
    <div id="botonIntro">?</div>
  </div>
</nav>

<script>
  const menuListas = document.getElementById('menuListas') as HTMLDivElement;
  const contenedorListas = document.getElementById('contenedorListas') as HTMLDivElement;
  const botonAbrirIntro = document.getElementById('botonIntro') as HTMLDivElement;
  const intro = document.getElementById('introduccion') as HTMLDivElement;

  if (menuListas) {
    menuListas.addEventListener('click', () => {
      if (contenedorListas.classList.contains('visible')) {
        contenedorListas.classList.remove('visible');
        menuListas.classList.remove('abierto');
      } else {
        contenedorListas.classList.add('visible');
        menuListas.classList.add('abierto');
      }
    });
  }

  // Cerrar listas si se hace click fuera de su contenedor
  document.body.addEventListener('click', (evento) => {
    if (
      !(
        contenedorListas === evento.target ||
        contenedorListas.contains(evento.target as Node) ||
        menuListas === evento.target
      )
    ) {
      contenedorListas.classList.remove('visible');
      menuListas.classList.remove('abierto');
    }
  });

  // Abrir y cerrar Intro
  botonAbrirIntro.onclick = () => {
    intro.classList.add('visible');
  };
</script>

<style lang="scss">
  @import '@/scss/constantes';
  #menu {
    margin: 0;
    font-family: var(--fuenteParrafo);
    font-size: 0.8em;
    position: fixed;
    top: 0;
    width: 100%;
    height: var(--altoMenu);
    color: var(--textoClaro);
    z-index: 9;
    text-transform: uppercase;
    display: flex;
    justify-content: flex-start;
    align-items: center;

    a,
    a:link {
      color: var(--textoClaro);
      transition: all 0.3s ease-in-out;

      &:hover,
      &.actual {
        // opacity: 0.8;
        // color: var(--magenta);
        color: var(--resaltadoVerde);
        // text-decoration: underline;
      }
    }

    p {
      margin: 0;
      line-height: 1;
    }

    #encabezado {
      background-color: var(--fondoVerdeOscuro);
      width: calc(100vw - 50px);
      padding: 0em 1em;
      display: flex;
      align-items: center;
      justify-content: space-around;
      height: 100%;
      max-height: 50px;
      z-index: 9;

      h1 {
        z-index: 3;
      }

      .cajaGusanos {
        position: absolute;
        background-image: url(/enflujo-haciendocaminos/imgs/gusanitos.svg);
        height: 50px;
        width: 10vw;
        left: 30vw;
        min-width: 70px;
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
      }

      // Lo mismo pero con psuedo elemento ::before, en este caso, en el HTML no va nada de esto.

      // &::before {
      //   content: '';
      //   background-image: url(/enflujo-haciendocaminos/imgs/gusanitos.svg);
      //   position: absolute;
      //   height: 50px;
      //   width: 20vw;
      //   background-repeat: no-repeat;
      // }

      // .cajaGusanos {
      //   display: flex;
      //   max-height: 50px;
      //   width: 100%;
      //   z-index: 0;
      //   position: absolute;

      //   .gusanos {
      //     height: 50px;
      //     width: 100%;
      //     object-fit: none;
      //   }
      // }
    }

    // Botón para cambiar de vista (proyectos / egresados)
    .botonVista {
      cursor: pointer;

      &:hover {
        opacity: 0.6;
      }
    }

    #menuListas {
      height: var(--altoMenu);
      width: 50px;
      background-color: var(--resaltadoVerde);
      display: flex;
      flex-direction: column;
      flex-wrap: nowrap;
      align-items: center;
      padding-top: 15px;
      cursor: pointer;

      .lineaMenu {
        width: 30px;
        height: 2px;
        display: block;
        margin-bottom: 5px;
        background-color: var(--fondoVerdeOscuro);
        transition: all 0.25s ease-out;
      }

      &.abierto {
        position: relative;
        .lineaMenu {
          display: none;
          position: absolute;

          &:first-child {
            display: block;
            transform: rotate(45deg);
            top: 23px;
          }

          &:last-child {
            display: block;
            top: 23px;
            transform: rotate(-45deg);
          }
        }
      }
    }

    #botonIntro {
      display: block;
      font-family: var(--fuenteNumeros);
      font-size: 1.2em;
      width: 2.1em;
      height: 2.1em;
      padding: 0.4em;
      font-weight: bold;
      border-radius: 50%;
      text-align: center;
      cursor: pointer;

      &:hover {
        opacity: 0.5;
        background-color: var(--fondoAmarilloClaro2);
        color: var(--textoOscuro);
      }
    }
  }

  // Cambiar estilos según tamaño de pantalla
  @media screen and (min-width: $corte2) {
    #menu {
      #encabezado {
        .cajaGusanos {
          position: static;
          background-image: url(/enflujo-haciendocaminos/imgs/gusanitos.svg);
          height: 50px;
          width: 10vw;
          min-width: 70px;
          background-repeat: no-repeat;
          background-position: center;
          background-size: cover;
        }
      }
    }
  }
</style>
