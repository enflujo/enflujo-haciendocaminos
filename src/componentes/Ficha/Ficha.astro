---
import Galeria from './Galeria.astro';
import Red from './Red.astro';

const secciones = [
  { nombre: 'Enlaces', slug: 'enlaces' },
  { nombre: 'Proyectos', slug: 'proyecto' },
  { nombre: 'Egresados', slug: 'egresado' },
  { nombre: 'Año de Graduación', slug: 'graduacion' },

  { nombre: 'Líderes de Proyectos', slug: 'lideres' },
  { nombre: 'Participantes', slug: 'participantes' },

  { nombre: 'Categorías', slug: 'categorias' },
  { nombre: 'Ramas', slug: 'ramas' },
  { nombre: 'Áreas', slug: 'temas' },
  { nombre: 'Ámbitos', slug: 'ambitos' }, // Egresados
  { nombre: 'Objetos de Análisis', slug: 'objetos' },
  { nombre: 'Ciudades', slug: 'ciudades' },
  { nombre: 'Municipios / Lugares', slug: 'municipios' },
  { nombre: 'Departamentos', slug: 'departamentos' },
  { nombre: 'Regiones', slug: 'regiones' },
  { nombre: 'Países', slug: 'paises' },
  { nombre: 'Décadas', slug: 'decadas' }
];
---

<div id="contenedorFicha">
  <div id="botonesFicha">
    <span id="cerrarFicha">X</span>
  </div>

  <div id="navegacion">
    <div id="navegacionProyectos">
      <div id="fichaElementoAnterior"><span class="botonNavegacion izquierda"></span></div>
      <div id="fichaElementoSiguiente"><span class="botonNavegacion derecha"></span></div>
    </div>
  </div>

  <section id="superior">
    <div id="contenedorCajaSuperior">
      <div id="contenedorTitulo">
        <h2 id="listaFicha"></h2>
        <p id="tituloFicha"></p>
      </div>
      <div id="conteoFicha"></div>
    </div>
  </section>

  <section id="inferior">
    <div class="seccionDatos descripcion" data-nombre="descripcion"></div>

    <Red />

    {
      secciones.map((seccion) => (
        <enflujo-seccion-ficha class="seccionDatos seccionFicha" data-nombre={seccion.slug}>
          <h3 class="titulo">{seccion.nombre}</h3>
          <ul class="contenido" />
        </enflujo-seccion-ficha>
      ))
    }

    <Galeria />
  </section>
</div>

<script>
  import {
    datosFicha,
    datosProyectos,
    datosListas,
    datosEgresados,
    datosListasEgresados,
    elementoSeleccionado,
    filtrarMapa,
    vista,
    actualizarUrl
  } from '@/utilidades/cerebro';
  import type {
    ElementoFicha,
    ElementoProyecto,
    Ficha,
    LLavesMultiples,
    Listas,
    ListasEgresados,
    LlavesListasEgresados
  } from '@/tipos';
  import { marked } from 'marked';
  import SeccionFicha from './SeccionFicha';

  const ficha = document.getElementById('contenedorFicha') as HTMLDivElement;
  const lista = document.getElementById('listaFicha') as HTMLTitleElement;
  const botonCerrarFicha = document.getElementById('cerrarFicha') as HTMLDivElement;
  const titulo = document.getElementById('tituloFicha') as HTMLParagraphElement;
  const conteoFicha = document.getElementById('conteoFicha') as HTMLDivElement;
  const contenedorSuperior = document.getElementById('contenedorCajaSuperior') as HTMLDivElement;
  const siguiente = document.getElementById('fichaElementoSiguiente') as HTMLSpanElement;
  const anterior = document.getElementById('fichaElementoAnterior') as HTMLSpanElement;
  const contenedorDescripcion = ficha.querySelector<HTMLDivElement>(
    '.seccionDatos[data-nombre="descripcion"]'
  ) as HTMLDivElement;
  const seccionEnlaces = ficha.querySelector<SeccionFicha>('.seccionDatos[data-nombre="enlaces"]') as SeccionFicha;

  // Cargar ficha anterior o ficha siguiente al hace click en los botones
  siguiente.onclick = () => {
    let lista = [];
    const actual = elementoSeleccionado.get();
    if (!actual) return;
    const vistaActual = vista.get();

    if (vistaActual === 'proyectos') {
      lista = actual.tipo !== 'proyecto' ? datosListas.get()[actual.tipo as keyof Listas] : datosProyectos.get();
    } else if (vistaActual === 'egresados') {
      lista =
        actual.tipo !== 'egresado'
          ? datosListasEgresados.get()[actual.tipo as keyof ListasEgresados]
          : datosEgresados.get();
    }

    const siguienteI = lista.length - 1 > +actual.id ? +actual.id + 1 : 0;
    actualizarUrl([
      { nombre: 'tipo', valor: actual.tipo },
      { nombre: 'id', valor: `${siguienteI}` }
    ]);
  };

  anterior.onclick = () => {
    let lista = [];
    const actual = elementoSeleccionado.get();
    if (!actual) return;
    const vistaActual = vista.get();

    if (vistaActual === 'proyectos') {
      lista = actual.tipo !== 'proyecto' ? datosListas.get()[actual.tipo as keyof Listas] : datosProyectos.get();
    } else if (vistaActual === 'egresados') {
      lista =
        actual.tipo !== 'egresado'
          ? datosListasEgresados.get()[actual.tipo as keyof ListasEgresados]
          : datosEgresados.get();
    }

    const anteriorI = +actual.id > 0 ? +actual.id - 1 : lista.length - 1;
    actualizarUrl([
      { nombre: 'tipo', valor: actual.tipo },
      { nombre: 'id', valor: `${anteriorI}` }
    ]);
  };

  botonCerrarFicha.onclick = () => {
    datosFicha.setKey('visible', false);
    window.history.pushState({}, '', decodeURIComponent(window.location.pathname));
    filtrarMapa();
  };

  datosFicha.subscribe((datos) => {
    if (!datos.visible) {
      ficha.style.display = 'none';
      return;
    }

    ficha.style.display = 'block';
    ficha.scroll({ top: 0, behavior: 'smooth' });

    lista.innerText = datos.lista ? datos.lista : '';
    titulo.innerText = datos.titulo ? datos.titulo : '';

    if (datos.conteo) {
      conteoFicha.style.display = 'block';
      conteoFicha.innerText = datos.conteo;
      contenedorSuperior.classList.remove('sinContador');
    } else {
      conteoFicha.style.display = 'none';
      contenedorSuperior.classList.add('sinContador');
    }

    // Llenar descripción, si tiene
    if (datos.descripcion) {
      contenedorDescripcion.style.display = 'block';
      contenedorDescripcion.innerHTML = marked.parse(datos.descripcion) as string;
    } else {
      contenedorDescripcion.style.display = 'none';
    }

    // Llenar enlaces, si tiene
    if (datos.enlaces && datos.enlaces.length) {
      seccionEnlaces.limpiar();
      seccionEnlaces.mostrar();

      datos.enlaces.forEach((elemento) => {
        const fila = document.createElement('li');
        const enlace = document.createElement('a');
        enlace.href = elemento;
        enlace.innerText = elemento;
        enlace.target = '_blank';
        fila.append(enlace);
        seccionEnlaces.agregarElemento(fila);
      });
    } else {
      seccionEnlaces.esconder();
    }

    const vistaActual = vista.get();

    if (!vistaActual) return;
    // Llenar el resto de los campos

    /**Campos de Proyectos */
    llenarCampos('proyecto', datos, vistaActual);
    llenarCampos('categorias', datos, vistaActual);
    llenarCampos('lideres', datos, vistaActual);
    llenarCampos('participantes', datos, vistaActual);
    llenarCampos('ramas', datos, vistaActual);

    llenarCampos('objetos', datos, vistaActual);
    llenarCampos('municipios', datos, vistaActual);
    llenarCampos('departamentos', datos, vistaActual);
    llenarCampos('regiones', datos, vistaActual);
    llenarCampos('decadas', datos, vistaActual);

    /** Campos de Egresados */
    llenarCampos('egresado', datos, vistaActual);
    llenarCampos('ambitos', datos, vistaActual);
    /** Campos compartidos */
    llenarCampos('temas', datos, vistaActual);
    llenarCampos('paises', datos, vistaActual);
    llenarCampos('ciudades', datos, vistaActual);
    llenarCampos('graduacion', datos, vistaActual);
    // Ocultar participantes en ficha de líderes de proyectos

    if (datos.lista === 'Líderes de Proyectos') {
      const seccionParticipantes = ficha.querySelector<SeccionFicha>(
        `.seccionDatos[data-nombre="participantes"]`
      ) as SeccionFicha;
      seccionParticipantes.style.display = 'none';
    }
  });

  function llenarCampos(
    campo: LLavesMultiples | 'proyecto' | 'egresado' | 'ambitos' | 'ciudades' | 'graduacion',
    datos: Ficha,
    vistaActual: 'proyectos' | 'egresados'
  ) {
    const seccion = ficha.querySelector<SeccionFicha>(`.seccionDatos[data-nombre="${campo}"]`) as SeccionFicha;
    const datosSeccion = datos[campo];

    seccion.limpiar();

    if (datosSeccion && datosSeccion?.length) {
      seccion.mostrar();

      datosSeccion.forEach((dato) => {
        const fila = document.createElement('li');
        fila.innerText = '';
        fila.innerText = dato.nombre;
        seccion.agregarElemento(fila);

        let indice = '0';

        if (vistaActual === 'proyectos') {
          if (campo === 'proyecto') {
            const i = datosProyectos.get().findIndex((proyecto) => proyecto.id === (dato as ElementoProyecto).id);
            indice = `${i}`;
          } else {
            const i = datosListas
              .get()
              [campo as LLavesMultiples].findIndex((elemento) => elemento.slug === (dato as ElementoFicha).slug);
            indice = `${i}`;
          }
        } else if (vistaActual === 'egresados') {
          if (campo === 'egresado') {
            const i = datosEgresados.get().findIndex((egresado) => egresado.id === (dato as ElementoProyecto).id);
            indice = `${i}`;
          } else {
            const i = datosListasEgresados
              .get()
              [campo as LlavesListasEgresados].findIndex((elemento) => elemento.nombre === dato.nombre);
            indice = `${i}`;
          }
        }

        fila.onclick = () => {
          actualizarUrl([
            { nombre: 'id', valor: indice },
            { nombre: 'tipo', valor: campo }
          ]);
        };
      });
    } else {
      seccion.esconder();
    }
  }
</script>

<style lang="scss" is:global>
  @import '@/scss/constantes';

  #contenedorFicha {
    max-height: calc(100vh - var(--altoMenu) - var(--altoLineaTiempo));
    position: absolute;
    display: none;
    overflow-y: auto;
    top: var(--altoMenu);
    background-color: var(--fondoVerdeOscuro);
    color: var(--textoClaro);
    z-index: 5;
    padding: 10px;
    border-radius: 1.5%;

    a,
    a:link {
      overflow-wrap: anywhere;
    }

    &::before {
      content: '';
      background-image: url(/imgs/gusano_4.svg);
      background-size: contain;
      position: absolute;
      width: 40px;
      height: 40px;
      margin: 0 0 0 0;
      top: 50%;
      left: -20px;
      background-repeat: no-repeat;
    }

    #botonesFicha {
      position: sticky;
      top: -10px;
      color: var(--textoOscuro);
      display: flex;
      justify-content: space-between;
      z-index: 99;
    }

    #cerrarFicha {
      position: absolute;
      cursor: pointer;
      margin: 0;
      color: var(--textoOscuro);
      font-size: 1.1em;
      background-color: var(--resaltadoVerde);
      padding: 7px 10px 0 10px;

      &:hover {
        background-color: var(--grisMedio);
        opacity: 0.7;
      }
    }

    #navegacion {
      position: sticky;
      top: -10px;
      cursor: pointer;
      z-index: 9;
      color: var(--textoOscuro);

      #navegacionProyectos {
        justify-content: space-between;
        width: 100%;
        background-color: var(--resaltadoVerde);
        padding: 0 10px 0 20px;
        z-index: 99;
        overflow-y: auto;
        display: flex;
        position: sticky;

        .botonNavegacion {
          display: block;
          width: 15px;
          height: 15px;
          border-top: 2px solid var(--textoOscuro);
          border-left: 2px solid var(--textoOscuro);
          cursor: pointer;
          opacity: 0.3;
          transition: opacity 0.25s ease-in-out;
          margin: 10px 20px 10px 20px;

          &:hover {
            opacity: 1;
          }

          &.derecha {
            transform: rotate(135deg);
          }

          &.izquierda {
            transform: rotate(-45deg);
          }
        }
      }
    }

    #superior {
      border: 1px solid var(--resaltadoVerde);
      display: flex;
      flex-direction: column;
      text-align: center;
      color: var(--textoOscuro);
      font-family: var(--fuenteNumeros);

      #contenedorCajaSuperior {
        display: flex;

        &.sinContador {
          #contenedorTitulo {
            flex-basis: 100%;
          }
        }

        #contenedorTitulo {
          background-color: var(--resaltadoVerde);
          flex-basis: 90%;
          margin: 0;
          display: flex;
          padding: 0 0 1.2em 0;
          gap: 0.15em 0;
          flex-direction: column;
          justify-content: center;
        }

        #listaFicha {
          margin: 0;
          padding: 0 3em 0 3em;
          font-size: 16px;
          font-weight: 700;
        }

        #tituloFicha {
          margin: 0;
          padding: 0 1.5em 0 1.5em;
          font-size: 18px;
        }

        #conteoFicha {
          margin: auto;
          color: var(--textoClaro);
          width: 70px;
          font-family: var(--fuenteNumeros);
        }
      }
    }

    #inferior {
      border: 1px solid var(--resaltadoVerde);
      display: flex;
      padding: 10px;
      padding-top: 20px;
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
      align-self: stretch;

      .seccionDatos {
        display: none;
        border-bottom: 1px solid var(--resaltadoVerde);
        margin: 0 15px 0 15px;
        padding: 10px 5px 15px 10px;
        align-items: flex-start;
        align-self: stretch;

        &.visible {
          display: flex;
        }

        .contenido {
          display: flex;
          padding: 0.4em 0;
          justify-content: center;
          flex-direction: column;
          align-items: flex-start;
          gap: 2px;
          flex: 1 0 0;
          align-self: stretch;

          ul {
            max-width: 59%;
          }

          li {
            cursor: pointer;
            margin-bottom: 0.5em;
            &:hover,
            &.resaltado {
              background-color: var(--fondoAmarilloClaro);
              color: var(--textoOscuro);
            }
          }
        }

        &.descripcion {
          font-size: 0.8em;
          // max-width: 92%;

          p {
            font-size: 1.1em;
            line-height: 1.4em;
          }
          h2 {
            font-size: 1.2em;
          }

          ul {
            max-width: 100%;
            list-style-type: disc;

            li {
              cursor: default;
              margin-bottom: 1.3em;
            }
          }
        }

        .titulo {
          margin: 0;
          padding-top: 0.2em;
          padding-right: 0.4em;
          flex-basis: 35%;
          font-size: 1em;
          position: sticky;
          top: 2em;
          z-index: 1;
        }

        .imagenes {
          display: flex;
          flex-wrap: wrap;
          flex-direction: row;
          justify-content: space-around;
        }
        .imagenFicha {
          position: relative;
          width: 100%;
          margin: 0.62em 0;
        }

        .imagenAncho {
          position: relative;
          width: 100%;
          margin: 0.62em 0;
        }

        .imagenAncho {
          position: relative;
          width: 45%;
          margin: 0.62em 0;
        }

        &.oculta {
          display: none;
        }
      }

      .seccionDatos:last-of-type {
        border: none;
      }
    }
  }

  #fichaRed {
    width: 100%;
    position: relative;

    #enlaceRedAcademia {
      top: 12px;
      right: 21px;
      position: absolute;
      width: 20px;
      height: 20px;
      background-size: contain;
      background-repeat: no-repeat;
      background-color: rgba(224, 245, 234, 0.846);
      transition: background-color 0.2s ease-out;

      &:hover {
        background-color: rgba(131, 246, 187, 0.846);
      }
    }

    .pieDeFoto {
      font-size: 0.7em;
      text-align: right;
      margin: 0 18px;
      padding: 0;
    }
  }

  #redAcademica {
    display: block;
    width: 100%;
    padding: 0.5em 1em;
    height: 300px;
    border: none;
  }

  // Cambiar estilos según tamaño de pantalla
  @media screen and (min-width: $corte3) {
    #contenedorFicha {
      width: 35vw;
      right: 0;

      #navegacion {
        #navegacionProyectos {
          padding-right: 1.25vw;
          padding-left: 1.25vw;
        }
      }
    }
  }
</style>
